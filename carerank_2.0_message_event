select distinct
  date(tc.datecreated) as assignment_date,
  upper(tc.countrycode) as countrycode,
  case when substring(tc.cellname, instr(tc.cellname, '-', -1, 1) +1, length(tc.cellname) - instr(tc.cellname, '-', -1, 1) +1) like ('%C%') then 'Control' else 'Test' end as cohort,
  case when lower(m.device) = 'smartphone' then 'Mobile' when (m.device = '' or m.device is null) then 'Mobile' else initcap(lower(m.device)) end as device,
  case when m.vertical = 'homeCare' then 'Housekeeping' when (m.vertical is null or m.vertical = '') then 'Childcare' else initcap(lower(m.vertical)) end as vertical,
  count(distinct tc.memberid) as assigned,
  count(distinct s.subscriptionId) as upgraded,
  s.pricePlanDurationInMonths as upgrade_duration,
  count(distinct case when date(s.subscriptionDateCreated) = date(m.dateProfileComplete) then s.subscriptionId end) as Day1s,
  count(distinct case when date(m.dateFirstPremiumSignup) = date(s.subscriptionDateCreated) and date(s.subscriptionDateCreated) != date(m.dateProfileComplete) then s.subscriptionId end) as Nths,
  count(distinct case when date(m.dateFirstPremiumSignup) != date(s.subscriptionDateCreated) then s.subscriptionId end) as Reupgrades,
  count(distinct pv.profileid) as profiles_viewed,
  count(distinct members_with_messages) as members_with_messages,
  count(distinct messages) as messages,
  count(distinct replies) as replies

from intl.hive_event tc

    join intl.hive_member m                     on m.countrycode = tc.countrycode and m.memberid = tc.memberid 
                                                and m.isinternalaccount is not true and m.closedforfraud is not true 
                                                and date(m.datemembersignup) >= '2024-08-01' and date(m.datemembersignup) < date(current_date) and lower(m.role) = 'seeker' 
                                             
    left join intl.transaction t               on t.member_id = m.memberid and t.country_code = m.countrycode
                                               and t.type in ('PriorAuthCapture','AuthAndCapture') and t.status = 'SUCCESS' and t.amount > 0 
                                               and t.date_created >= tc.datecreated and t.date_created >= '2024-08-01' and date(t.date_created) < date(current_date) 
                                             
    left join intl.hive_subscription_plan s    on s.memberid = t.member_id and s.subscriptionid = t.subscription_plan_id 
                                               and s.countrycode = t.country_code and s.subscriptiondatecreated >= tc.datecreated
                                               and s.subscriptiondatecreated >= '2024-08-01' and date(s.subscriptiondatecreated) < date(current_date)  
                                               
    left join intl.hive_event pv               on pv.memberid = tc.memberid and pv.countrycode = tc.countrycode and pv.datecreated > tc.datecreated  
                                               and pv.name = 'ProfileView' and date(pv.datecreated) >= '2024-08-01' and date(pv.datecreated) < date(current_date)    
                                               
    left join (
                  select distinct 
                    msg.datecreated as date,
                    msg.countrycode,
                    msg.memberid as members_with_messages,
                    msg.itemid as messages,
                    rpy.itemid as replies
                  from intl.hive_event msg
                  left join intl.hive_event rpy   on msg.countrycode = msg.countrycode and msg.memberid = rpy.memberid  
                                                  and msg.receiverid = rpy.receiverid and msg.itemid = rpy.itemid
                                                  and rpy.name = 'Message' and rpy.messageType in ('reply', 'no-thanks')
                                                  and rpy.itemType in ('MEMBER', 'PROFILE') and rpy.datecreated > msg.datecreated                      
                  where msg.name = 'Message'
                    and date(msg.datecreated) >= '2024-08-01'
                    and date(msg.datecreated) < date(current_date) 
                    and msg.role = 'seeker'
                    and msg.messageType = 'message'
                    and msg.itemType in ('MEMBER', 'PROFILE')
                    and msg.isCsr is null
                    and msg.memberSearchStatus = 'Approved' 
                 ) msg on msg.members_with_messages = tc.memberid and msg.countrycode = tc.countrycode and msg.date > tc.datecreated                                         
                                                                             
where tc.name = 'TestCellAssignment'
  and tc.testname = 'monolith-carerank-ab'
  and date(tc.datecreated) >= '2024-08-01'
  and date(tc.datecreated) < date(current_date)
  and tc.memberid not in ('16866555', '16869237')

group by 1,2,3,4,5,8
